% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean.R
\name{log_cleaning}
\alias{log_cleaning}
\title{Log a cleaning change}
\usage{
log_cleaning(data, uuid, action, extra_columns = list(),
  question.name = NULL, new.value = NULL, issue = NULL, dir,
  filename = "cleaning_logbook.csv")
}
\arguments{
\item{data}{The dataset that is being cleaned. Has to be a data.frame (no tibble).}

\item{uuid}{A vector with uuid character objects. Can be one but also multiple.
If there are multiple the cleaning will iterate over all of them and use the same question.name, issue and new.value for them.}

\item{action}{This is the action that needs to be done on the defined row. It is either flag (f), change (c) or deletion (d).}

\item{extra_columns}{Must be a list with the names of the objects being the names of the columns in the cleaning log
and the content of the list being the names of the dataset columns associated with it (see example). This is not required.
But it should be the same as the initiated logbook.}

\item{question.name}{The name of the column in which the value is that needs to be flagged or changed.}

\item{new.value}{The value that the old value needs to be changed to (only for change action). Must be either same length as
uuid vector or lenght 1 (if all need to be changed to same value).}

\item{issue}{A description of the issue why it is being cleaned.}

\item{dir}{The directory name of the location where it needs to be saved.}

\item{filename}{Name of the logbook. Default is cleaning_logbook.csv. Needs to have a csv extention.}
}
\value{
It returns the logbook as data.frame.
}
\description{
Log a cleaning change
}
\examples{
dir <- getwd()
extra_columns <- list(population_group = "population_group", governorate = "governorate_mcna")
\dontrun{
init_cleaning_log(dir, extra_columns = extra_columns)

data(mcna2019)
library(dplyr)
idp_first_place <- mcna2019 \%>\% dplyr::filter(idp_first_place == "yes")
flag <- difftime(as.POSIXct(idp_first_place$arrival_date_idp, format="\%Y-\%m-\%d"),
                 as.POSIXct(idp_first_place$displace_date_idp, format="\%Y-\%m-\%d"),
                 units = "weeks") > 4
idp_first_place[which(flag), c("displace_date_idp", "arrival_date_idp")]
uuid <- idp_first_place$X_uuid[which(flag)]
log <- log_cleaning(mcna2019, uuid, action = "f",  extra_columns = extra_columns,
                                    question.name="arrival_date_idp",
                                    issue="The difference between displace date
                                    and arrival date while it being first place of
                                    displacement is more than 4 weeks",
                                    dir = dir)
}
}
